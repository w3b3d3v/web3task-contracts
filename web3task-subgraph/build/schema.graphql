type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AuthorizeOperator @entity(immutable: true) {
  id: Bytes!
  interfaceId: Bytes! # bytes4
  roleId: BigInt! # uint256
  isAuthorized: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type AuthorizePersonnel @entity(immutable: true) {
  id: Bytes!
  roleId: BigInt! # uint256
  authorizedAddress: Bytes! # address
  isAuthorized: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Deposit @entity(immutable: true) {
  id: Bytes!
  authorizationId: BigInt! # uint256
  depositor: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DescriptionUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  description: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type EndDateUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  endDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MetadataUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  metadata: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type QuorumUpdated @entity(immutable: true) {
  id: Bytes!
  value: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskCreated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  creator: Bytes! # address
  assignee: Bytes! # address
  reward: BigInt! # uint256
  endDate: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskReviewed @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  reviewer: Bytes! # address
  metadata: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskStarted @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  assignee: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TaskUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  status: Int! # uint8
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type TitleUpdated @entity(immutable: true) {
  id: Bytes!
  taskId: BigInt! # uint256
  title: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Withdraw @entity(immutable: true) {
  id: Bytes!
  authorizationId: BigInt! # uint256
  withdrawer: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
